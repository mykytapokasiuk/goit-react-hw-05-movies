{"version":3,"file":"static/js/306.42c05a66.chunk.js","mappings":"8PA6BA,EAxB2B,WACzB,IAAAA,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtBb,GAAa,GAAMY,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAgBd,GAAS,KAAD,EAAzCS,EAAQE,EAAAI,KACdpB,EAAgBc,EAASO,MAAML,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,UAE/BO,EAAAA,EAAAA,IAAQP,EAAAM,GAAME,SAAS,QAEH,OAFGR,EAAAC,KAAA,GAEvBb,GAAa,GAAOY,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvB,kBAVsB,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KAYvBpB,GAboB,CActB,GAAG,CAACH,IACG,CAAEN,aAAAA,EAAcI,UAAAA,EACzB,E,uDC1BA,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAmG,uBAAnG,EAAwI,0BAAxI,EAAiL,2BAAjL,EAAwN,wBAAxN,EAAiQ,6BAAjQ,EAA+S,6B,SCiD/S,EA5Ca,WACX,IAAA0B,EAAoCC,IAA5B/B,EAAY8B,EAAZ9B,aAAcI,EAAS0B,EAAT1B,UAEtB,OACE4B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,CAC3B/B,IAAagC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACrBD,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAcC,SAAC,UAC9BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SACzBnC,EAAasC,OAAS,GACrBtC,EAAauC,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAC5B,OACET,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXQ,IACED,EAAME,aAAY,mCAAAC,OACqBH,EAAME,cACzCE,EAENC,IAAKL,EAAMM,QAEbf,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAcC,SAAEM,EAAMM,QACpCX,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAmBC,SAC9BM,EAAMO,WACLhB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,aACO,KACXC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAmBC,SACjCM,EAAMO,eAIX,UArBCP,EAAMQ,GA2BnB,QAIV,C","sources":["hooks/useGetMovieCredits.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport { onError } from 'services/utils';\n\nconst useGetMovieCredits = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCredits = async () => {\n      try {\n        setIsloading(true);\n        const response = await getMovieCredits(movieId);\n        setMovieCredits(response.cast);\n      } catch (error) {\n        onError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n  return { movieCredits, isLoading };\n};\n\nexport default useGetMovieCredits;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__oPPtb\",\"castTitle\":\"Cast_castTitle__cJi1i\",\"castList\":\"Cast_castList__hbalY\",\"castItemImg\":\"Cast_castItemImg__OWN1Y\",\"actorDetails\":\"Cast_actorDetails__1FJAZ\",\"actorName\":\"Cast_actorName__JhfgR\",\"actorCharacter\":\"Cast_actorCharacter__HJVlq\",\"characterColor\":\"Cast_characterColor__b5Tre\"};","import React from 'react';\nimport Loader from 'components/Loader/Loader';\nimport useGetMovieCredits from 'hooks/useGetMovieCredits';\nimport no_photo from '../../images/no_photo.jpg';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieCredits, isLoading } = useGetMovieCredits();\n\n  return (\n    <div className={css.container}>\n      {isLoading && <Loader />}\n      <h2 className={css.castTitle}>Cast</h2>\n      <ul className={css.castList}>\n        {movieCredits.length > 0 &&\n          movieCredits.slice(0, 10).map(actor => {\n            return (\n              <li key={actor.id}>\n                <img\n                  className={css.castItemImg}\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                      : no_photo\n                  }\n                  alt={actor.name}\n                />\n                <div className={css.actorDetails}>\n                  <p className={css.actorName}>{actor.name}</p>\n                  <p className={css.actorCharacter}>\n                    {actor.character ? (\n                      <span>\n                        Character:{' '}\n                        <span className={css.characterColor}>\n                          {actor.character}\n                        </span>\n                      </span>\n                    ) : (\n                      ''\n                    )}\n                  </p>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieCredits","setMovieCredits","_useState3","_useState4","isLoading","setIsloading","movieId","useParams","useEffect","fetchMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getMovieCredits","sent","cast","t0","onError","message","finish","stop","apply","arguments","_useGetMovieCredits","useGetMovieCredits","_jsxs","className","css","children","_jsx","Loader","length","slice","map","actor","src","profile_path","concat","no_photo","alt","name","character","id"],"sourceRoot":""}