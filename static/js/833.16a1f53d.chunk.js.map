{"version":3,"file":"static/js/833.16a1f53d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","hooks/useGetTrendingMovies.js","pages/HomePage/HomePage.jsx","services/api.js","services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__uNu-e\",\"trandingMoviesTitle\":\"HomePage_trandingMoviesTitle__MtOuo\",\"movieList\":\"HomePage_movieList__ECohD\",\"movieListItem\":\"HomePage_movieListItem__SK9H-\",\"poster\":\"HomePage_poster__+X7mT\",\"movieTitle\":\"HomePage_movieTitle__oMj7q\"};","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { onError } from 'services/utils';\n\nconst useGetTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsloading(true);\n        const response = await getTrendingMovies();\n        setMovies(response.results);\n      } catch (error) {\n        onError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return { movies, isLoading };\n};\n\nexport default useGetTrendingMovies;\n","import { Link } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport coming_soon from '../../images/coming_soon.jpg';\nimport css from './HomePage.module.css';\nimport useGetTrendingMovies from 'hooks/useGetTrendingMovies';\n\nconst HomePage = () => {\n  const { movies, isLoading } = useGetTrendingMovies();\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.trandingMoviesTitle}>Trending movies</h1>\n      {isLoading && <Loader />}\n      <ul className={css.movieList}>\n        {movies.map(movie => {\n          return (\n            <li className={css.movieListItem} key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                <img\n                  className={css.poster}\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                      : coming_soon\n                  }\n                  alt={movie.title}\n                />\n                <p className={css.movieTitle}>{movie.title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\nimport params from './utils.js';\n\n/**\n *  Gets trending movies from server\n * @function getTrendingMovies\n * @returns {Promise} Promise\n */\nconst getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${params.url}trending/movie/day?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets movie details from server\n * @function getMovieDetails\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets cast information for a movie page\n * @function getMovieCredits\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieCredits = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/credits?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovieReviews\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/reviews?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovies\n * @param {string} search_query\n * @returns {Promise} Promise\n */\nconst getMovies = async search_query => {\n  const { data } = await axios.get(\n    `${params.url}search/movie?api_key=${params.key}&query=${search_query}&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getMovies,\n};\n","import { Notify } from 'notiflix';\n\nconst params = {\n  url: 'https://api.themoviedb.org/3/',\n  key: '7bade8181fde7cd628993717c20b9542',\n};\n\nexport default params;\n\n/**\n * Shows a message in case of an error\n *@function onError\n * @param {string} error\n */\nexport const onError = error => {\n  Notify.failure(`Please, try again later. Error: ${error}`, {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 3000,\n    fontSize: '13px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n};\n\n/**\n * Shows a message if the input field is empty\n *@function onInputEmpty\n */\nexport const onInputEmpty = () => {\n  Notify.failure('The search field cannot be empty, please try again.', {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 2000,\n    fontSize: '15px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n  return '';\n};\n\n/**\n * Checks server response, shows message\n *@function checkResponse\n * @param {promise} response\n */\nexport const checkResponse = (response, setSearch) => {\n  if (response.total_results === 0) {\n    Notify.failure(\n      'Sorry, there are no movies matching your search query. Please try again.',\n      {\n        width: '260px',\n        showOnlyTheLastOne: true,\n        position: 'center-center',\n        timeout: 2000,\n        fontSize: '15px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'from-top',\n      }\n    );\n    setSearch({\n      query: '',\n    });\n    return;\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsloading","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getTrendingMovies","sent","results","t0","onError","message","finish","stop","apply","arguments","_useGetTrendingMovies","useGetTrendingMovies","_jsxs","className","css","children","_jsx","Loader","map","movie","Link","to","concat","id","src","poster_path","coming_soon","alt","title","_yield$axios$get","data","axios","get","params","url","key","abrupt","getMovieDetails","_ref2","_callee2","movie_id","_yield$axios$get2","_context2","_x","getMovieCredits","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovies","_ref5","_callee5","search_query","_yield$axios$get5","_context5","_x4","error","Notify","failure","width","showOnlyTheLastOne","position","timeout","fontSize","borderRadius","cssAnimationStyle","onInputEmpty","checkResponse","setSearch","total_results","query"],"sourceRoot":""}