{"version":3,"file":"static/js/997.7bb1d94c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","hooks/useGetMovies.js","pages/Movies/Movies.jsx","services/api.js","services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"submitBtn\":\"Movies_submitBtn__7axAC\",\"movieList\":\"Movies_movieList__FD6N4\",\"movieListItem\":\"Movies_movieListItem__VgK6i\",\"poster\":\"Movies_poster__Yc3Qb\",\"movieTitle\":\"Movies_movieTitle__lz38M\"};","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'services/api';\nimport * as notifications from 'services/utils';\n\nconst useGetMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const searchTerm = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchTerm) return;\n    const fetchMovies = async () => {\n      try {\n        setIsloading(true);\n        const response = await getMovies(searchTerm);\n        setMovies(response.results);\n        notifications.checkResponse(response, setSearchParams);\n      } catch (error) {\n        notifications.onError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n    fetchMovies();\n  }, [searchTerm, setSearchParams]);\n\n  const onSubmit = input => {\n    if (!input) {\n      notifications.onInputEmpty();\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form_element = event.currentTarget;\n    const searchValue = form_element.elements.searchQuery.value.trim();\n    setSearchParams({\n      query: searchValue,\n    });\n    const isSuccess = onSubmit(searchValue);\n    if (isSuccess) form_element.reset();\n  };\n\n  return { movies, isLoading, location, handleSubmit };\n};\n\nexport default useGetMovies;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport coming_soon from '../../images/coming_soon.jpg';\nimport css from './Movies.module.css';\nimport useGetMovies from 'hooks/useGetMovies';\n\nconst Movies = () => {\n  const { movies, isLoading, location, handleSubmit } = useGetMovies();\n\n  return (\n    <div className={css.container}>\n      {isLoading && <Loader />}\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies...\"\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.submitBtn}>\n          Search\n        </button>\n      </form>\n\n      {movies.length > 0 && (\n        <ul className={css.movieList}>\n          {movies.map(movie => {\n            return (\n              <li className={css.movieListItem} key={movie.id}>\n                <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                  <img\n                    className={css.poster}\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                        : coming_soon\n                    }\n                    alt={movie.title}\n                  />\n                  <p className={css.movieTitle}>{movie.title}</p>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport params from './utils.js';\n\n/**\n *  Gets trending movies from server\n * @function getTrendingMovies\n * @returns {Promise} Promise\n */\nconst getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${params.url}trending/movie/day?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets movie details from server\n * @function getMovieDetails\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets cast information for a movie page\n * @function getMovieCredits\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieCredits = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/credits?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovieReviews\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/reviews?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovies\n * @param {string} search_query\n * @returns {Promise} Promise\n */\nconst getMovies = async search_query => {\n  const { data } = await axios.get(\n    `${params.url}search/movie?api_key=${params.key}&query=${search_query}&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getMovies,\n};\n","import { Notify } from 'notiflix';\n\nconst params = {\n  url: 'https://api.themoviedb.org/3/',\n  key: '7bade8181fde7cd628993717c20b9542',\n};\n\nexport default params;\n\n/**\n * Shows a message in case of an error\n *@function onError\n * @param {string} error\n */\nexport const onError = error => {\n  Notify.failure(`Please, try again later. Error: ${error}`, {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 3000,\n    fontSize: '13px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n};\n\n/**\n * Shows a message if the input field is empty\n *@function onInputEmpty\n */\nexport const onInputEmpty = () => {\n  Notify.failure('The search field cannot be empty, please try again.', {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 2000,\n    fontSize: '15px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n  return '';\n};\n\n/**\n * Checks server response, shows message\n *@function checkResponse\n * @param {promise} response\n */\nexport const checkResponse = (response, setSearch) => {\n  if (response.total_results === 0) {\n    Notify.failure(\n      'Sorry, there are no movies matching your search query. Please try again.',\n      {\n        width: '260px',\n        showOnlyTheLastOne: true,\n        position: 'center-center',\n        timeout: 2000,\n        fontSize: '15px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'from-top',\n      }\n    );\n    setSearch({\n      query: '',\n    });\n    return;\n  }\n};\n"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsloading","searchTerm","get","location","useLocation","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getMovies","sent","results","notifications","t0","message","finish","stop","apply","arguments","handleSubmit","event","preventDefault","form_element","currentTarget","searchValue","elements","searchQuery","value","trim","query","reset","_useGetMovies","useGetMovies","_jsxs","className","css","children","_jsx","Loader","onSubmit","type","name","autoComplete","placeholder","length","map","movie","Link","state","from","to","concat","id","src","poster_path","coming_soon","alt","title","getTrendingMovies","_yield$axios$get","data","axios","params","url","key","abrupt","getMovieDetails","_ref2","_callee2","movie_id","_yield$axios$get2","_context2","_x","getMovieCredits","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","search_query","_yield$axios$get5","_context5","_x4","onError","error","Notify","failure","width","showOnlyTheLastOne","position","timeout","fontSize","borderRadius","cssAnimationStyle","onInputEmpty","checkResponse","setSearch","total_results"],"sourceRoot":""}